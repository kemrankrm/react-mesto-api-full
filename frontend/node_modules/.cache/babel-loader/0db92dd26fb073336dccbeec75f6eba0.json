{"ast":null,"code":"export class Api {\n  constructor(configuration) {\n    this._config = configuration;\n    this._baseUrl = configuration.baseUrl;\n    this._headers = configuration.headers;\n  } //UPLOADING NEW AVATAR\n\n\n  upploadAvatar(data) {\n    console.log(data);\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  } //GETTING USER INFORMATION\n\n\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  } // INITIAL CARDS SETUP\n\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  } //USER INFORMATION POSTING\n\n\n  postUserInfo(inputData) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputData.name,\n        about: inputData.about\n      })\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  postNewCard(inputData) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputData.name,\n        link: inputData.link\n      })\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  removeCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  getLikeArr() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  putLike(cardId) {\n    // console.log(cardId);\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes `, {\n      method: 'PUT',\n      headers: this._headers,\n      body: JSON.stringify({\n        _id: cardId\n      })\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._checkResponse(res);\n    });\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n  }\n\n}","map":{"version":3,"names":["Api","constructor","configuration","_config","_baseUrl","baseUrl","_headers","headers","upploadAvatar","data","console","log","fetch","method","body","JSON","stringify","avatar","then","res","_checkResponse","getUserData","getInitialCards","postUserInfo","inputData","name","about","postNewCard","link","removeCard","cardId","getLikeArr","putLike","_id","removeLike","ok","json","Promise","reject","status"],"sources":["/Users/kemrankarimov/Desktop/mesto-react/src/utils/Api.js"],"sourcesContent":["export class Api {\n    constructor(configuration) {\n      this._config = configuration;\n      this._baseUrl = configuration.baseUrl;\n      this._headers = configuration.headers;\n    }\n\n    //UPLOADING NEW AVATAR\n    upploadAvatar(data){\n        console.log(data);\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar,\n            })\n        })\n            .then(res => {\n                return this._checkResponse(res)\n            })\n    }\n\n    //GETTING USER INFORMATION\n    getUserData(){\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n            .then(res => {\n                return this._checkResponse(res)\n            })\n\n    }\n  \n    // INITIAL CARDS SETUP\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n        .then(res => {\n            return this._checkResponse(res);\n        });   \n    }\n\n    //USER INFORMATION POSTING\n    postUserInfo(inputData){\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: inputData.name,\n                about: inputData.about,\n            })\n            })\n                .then(res => {\n                    return this._checkResponse(res)\n                })\n    }\n\n    postNewCard(inputData){\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: inputData.name,\n                link: inputData.link,\n            })\n        })\n            .then(res => {\n                return this._checkResponse(res)\n            })\n    }\n\n    removeCard(cardId){\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(res => {\n                return this._checkResponse(res)\n            })\n    }\n\n    getLikeArr(){\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n        .then(res => {\n            return this._checkResponse(res)\n        });\n    }\n\n    putLike(cardId){\n        // console.log(cardId);\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes `, {\n            method: 'PUT',\n            headers: this._headers,\n            body: JSON.stringify({\n                _id: cardId\n            })\n        })\n            .then(res => {\n                return this._checkResponse(res)\n            });\n    }\n\n\n    removeLike(cardId){\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(res => {\n                return this._checkResponse(res)\n            })\n    }\n\n    _checkResponse(res){\n        if(res.ok){\n            return res.json()\n        } else {\n            return Promise.reject(`Ошибка ${res.status}`)\n        }\n    }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}