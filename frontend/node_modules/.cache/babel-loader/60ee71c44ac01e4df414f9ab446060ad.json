{"ast":null,"code":"var _jsxFileName = \"/Users/kemrankarimov/Desktop/mesto-react/src/components/AddPlacePopup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPlacePopup(props) {\n  _s();\n\n  // const [cardName, setCardName] = useState('');\n  // const [cardLink, setCardLink] = useState('');\n  const [card, setCard] = useState({\n    name: '',\n    link: ''\n  });\n  useEffect(() => {\n    // setCardName('');\n    // setCardLink('');\n    setCard({\n      name: '',\n      link: ''\n    });\n  }, []);\n\n  const handleAddPlace = e => {\n    e.preventDefault(); // console.log(card);\n    // props.onAddPlace({\n    //     name: card.name,\n    //     link: card.link\n    // })\n  };\n\n  const handleNameChange = e => {\n    console.log(e.target.value); // console.log(e.target.name);\n    // setCard({name: [e.target.name], link: [e.target.value] })\n    // setCardName(e.target.value);\n    // setCardLink(e.target.value);\n  };\n\n  const handleLinkChange = e => {// setCardLink(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.isOpen ? `popup popup_open popup_type_new-place` : `popup popup_type_new-place`,\n    id: \"popup-ep\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"popup__close-button\",\n        type: \"button\",\n        id: \"pup-close\",\n        onClick: props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"popup__form popup__form_type_profile-edit\",\n        onSubmit: handleAddPlace,\n        name: \"editForm\",\n        id: \"edit-form\",\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"popup__text\",\n          children: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u041C\\u0435\\u0441\\u0442\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"popup__input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: card.name,\n            onChange: handleNameChange,\n            id: \"place-name\",\n            name: \"name\",\n            className: \"popup__input popup__input_type_place-name\",\n            placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n            minLength: \"2\",\n            maxLength: \"30\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"popup__url-input-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"url\",\n            value: card.link,\n            onChange: handleLinkChange,\n            id: \"url-input\",\n            name: \"link\",\n            className: \"popup__input popup__input_type_image-url\",\n            placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"popup__place-name-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            name: \"button\",\n            className: \"popup__submit-button\",\n            children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__overlay popup__overlay_type_edit\",\n      onClick: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddPlacePopup, \"XWkTzrRZ1r/mlGCVoP9O8IW+T9Y=\");\n\n_c = AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["useEffect","useState","AddPlacePopup","props","card","setCard","name","link","handleAddPlace","e","preventDefault","handleNameChange","console","log","target","value","handleLinkChange","isOpen","onClose"],"sources":["/Users/kemrankarimov/Desktop/mesto-react/src/components/AddPlacePopup.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nexport default function AddPlacePopup(props){\n    // const [cardName, setCardName] = useState('');\n    // const [cardLink, setCardLink] = useState('');\n    const [card, setCard] = useState({name: '', link: ''})\n\n    useEffect(() => {\n        // setCardName('');\n        // setCardLink('');\n        setCard({name: '', link: ''})\n    }, []);\n\n    const handleAddPlace = (e) => {\n        e.preventDefault();\n        // console.log(card);\n        // props.onAddPlace({\n        //     name: card.name,\n        //     link: card.link\n        // })\n        \n    }\n\n    const handleNameChange = (e) => {\n        console.log(e.target.value)\n        // console.log(e.target.name);\n        // setCard({name: [e.target.name], link: [e.target.value] })\n        // setCardName(e.target.value);\n        // setCardLink(e.target.value);\n        \n    }\n\n    const handleLinkChange = (e) => {\n        // setCardLink(e.target.value);\n    }\n\n    return (\n        <div className={props.isOpen ? `popup popup_open popup_type_new-place` : `popup popup_type_new-place`} id=\"popup-ep\">\n            <div className=\"popup__container\">\n                <button className=\"popup__close-button\" type=\"button\" id=\"pup-close\" onClick={props.onClose}></button> \n                <form className=\"popup__form popup__form_type_profile-edit\" onSubmit={handleAddPlace} name=\"editForm\" id=\"edit-form\" noValidate>\n                    <h2 className=\"popup__text\">Новое Место</h2>\n                    <fieldset className=\"popup__input-container\">\n                        <input type=\"text\" value={card.name} onChange={handleNameChange} id=\"place-name\" name=\"name\" className=\"popup__input popup__input_type_place-name\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required />\n                        <span className=\"popup__url-input-error\"></span>\n                        <input type=\"url\" value={card.link} onChange={handleLinkChange} id=\"url-input\" name=\"link\" className=\"popup__input popup__input_type_image-url\" placeholder=\"Ссылка на картинку\" required />\n                        <span className=\"popup__place-name-error\"></span>\n                        <button type=\"submit\" name=\"button\" className=\"popup__submit-button\">Сохранить</button>\n                    </fieldset>\n                </form>\n            </div>\n            <div className=\"popup__overlay popup__overlay_type_edit\" onClick={props.onClose}></div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}